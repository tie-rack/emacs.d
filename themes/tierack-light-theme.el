(deftheme tierack-light
  "Created 2019-04-18.")

(custom-theme-set-faces
 'tierack-light
 '(default ((t (:family "Fira Mono" :foundry "nil" :width normal :height 140 :weight normal :slant normal :underline nil :overline nil :strike-through nil :box nil :inverse-video nil :foreground "#000000" :background "#FFFEFE" :stipple nil :inherit nil))))
 '(cursor ((t (:background "#000000"))))
 '(fixed-pitch ((t (:family "Monospace"))))
 '(variable-pitch ((((type w32)) (:foundry "outline" :family "Arial")) (t (:family "Sans Serif"))))
 '(escape-glyph ((((background dark)) (:foreground "cyan")) (((type pc)) (:foreground "magenta")) (t (:foreground "brown"))))
 '(homoglyph ((((background dark)) (:foreground "cyan")) (((type pc)) (:foreground "magenta")) (t (:foreground "brown"))))
 '(minibuffer-prompt ((t (:foreground "#773333"))))
 '(highlight ((((class color) (min-colors 88) (background light)) (:background "darkseagreen2")) (((class color) (min-colors 88) (background dark)) (:background "darkolivegreen")) (((class color) (min-colors 16) (background light)) (:background "darkseagreen2")) (((class color) (min-colors 16) (background dark)) (:background "darkolivegreen")) (((class color) (min-colors 8)) (:foreground "black" :background "green")) (t (:inverse-video t))))
 '(region ((t (:background "#DDDDFF"))))
 '(shadow ((t (:foreground "#666666"))))
 '(secondary-selection ((t (:background "#FFFFDD"))))
 '(trailing-whitespace ((((class color) (background light)) (:background "red1")) (((class color) (background dark)) (:background "red1")) (t (:inverse-video t))))
 '(font-lock-builtin-face ((t (:foreground "#9568d5"))))
 '(font-lock-comment-delimiter-face ((default (:inherit (font-lock-comment-face)))))
 '(font-lock-comment-face ((t (:slant italic :foreground "#517fc7"))))
 '(font-lock-constant-face ((t (:foreground "#dc4972"))))
 '(font-lock-doc-face ((t (:foreground "#b86b45"))))
 '(font-lock-function-name-face ((t (:foreground "#527ecb"))))
 '(font-lock-keyword-face ((t (:foreground "#4400AA"))))
 '(font-lock-negation-char-face ((t nil)))
 '(font-lock-preprocessor-face ((t (:foreground "#000052"))))
 '(font-lock-regexp-grouping-backslash ((t (:inherit (bold)))))
 '(font-lock-regexp-grouping-construct ((t (:inherit (bold)))))
 '(font-lock-string-face ((t (:foreground "#488e44"))))
 '(font-lock-type-face ((t (:foreground "#000000"))))
 '(font-lock-variable-name-face ((t (:foreground "#d15946"))))
 '(font-lock-warning-face ((t (:inherit (error)))))
 '(button ((t (:inherit (link)))))
 '(link ((((class color) (min-colors 88) (background light)) (:underline (:color foreground-color :style line) :foreground "RoyalBlue3")) (((class color) (background light)) (:underline (:color foreground-color :style line) :foreground "blue")) (((class color) (min-colors 88) (background dark)) (:underline (:color foreground-color :style line) :foreground "cyan1")) (((class color) (background dark)) (:underline (:color foreground-color :style line) :foreground "cyan")) (t (:inherit (underline)))))
 '(link-visited ((default (:inherit (link))) (((class color) (background light)) (:foreground "magenta4")) (((class color) (background dark)) (:foreground "violet"))))
 '(fringe ((((class color) (background light)) (:background "grey95")) (((class color) (background dark)) (:background "grey10")) (t (:background "gray"))))
 '(header-line ((default (:inherit (mode-line))) (((type tty)) (:underline (:color foreground-color :style line) :inverse-video nil)) (((class color grayscale) (background light)) (:box nil :foreground "grey20" :background "grey90")) (((class color grayscale) (background dark)) (:box nil :foreground "grey90" :background "grey20")) (((class mono) (background light)) (:underline (:color foreground-color :style line) :box nil :inverse-video nil :foreground "black" :background "white")) (((class mono) (background dark)) (:underline (:color foreground-color :style line) :box nil :inverse-video nil :foreground "white" :background "black"))))
 '(tooltip ((((class color)) (:inherit (variable-pitch) :foreground "black" :background "lightyellow")) (t (:inherit (variable-pitch)))))
 '(mode-line ((t (:foreground "black" :background "#EEEEEE"))))
 '(mode-line-buffer-id ((t (:weight bold :foreground "black" :background "#FFFFFF"))))
 '(mode-line-emphasis ((t (:weight bold))))
 '(mode-line-highlight ((((class color) (min-colors 88)) (:box (:line-width 2 :color "grey40" :style released-button))) (t (:inherit (highlight)))))
 '(mode-line-inactive ((t (:foreground "black" :background "#999999"))))
 '(isearch ((t (:background "#FFDDDD"))))
 '(isearch-fail ((((class color) (min-colors 88) (background light)) (:background "RosyBrown1")) (((class color) (min-colors 88) (background dark)) (:background "red4")) (((class color) (min-colors 16)) (:background "red")) (((class color) (min-colors 8)) (:background "red")) (((class color grayscale)) (:foreground "grey")) (t (:inverse-video t))))
 '(lazy-highlight ((t (:background "#DDFFDD"))))
 '(match ((((class color) (min-colors 88) (background light)) (:background "yellow1")) (((class color) (min-colors 88) (background dark)) (:background "RoyalBlue3")) (((class color) (min-colors 8) (background light)) (:foreground "black" :background "yellow")) (((class color) (min-colors 8) (background dark)) (:foreground "white" :background "blue")) (((type tty) (class mono)) (:inverse-video t)) (t (:background "gray"))))
 '(next-error ((t (:inherit (region)))))
 '(query-replace ((t (:inherit (isearch)))))
 '(rainbow-delimiters-depth-1-face ((t (:foreground "#000000"))))
 '(rainbow-delimiters-depth-2-face ((t (:foreground "#0000cc"))))
 '(rainbow-delimiters-depth-3-face ((t (:foreground "#cc4422"))))
 '(rainbow-delimiters-depth-4-face ((t (:foreground "#008800"))))
 '(rainbow-delimiters-depth-5-face ((t (:foreground "#aa00aa"))))
 '(rainbow-delimiters-depth-6-face ((t (:foreground "#bb7700"))))
 '(rainbow-delimiters-depth-7-face ((t (:foreground "#442288"))))
 '(rainbow-delimiters-depth-8-face ((t (:foreground "#779944"))))
 '(rainbow-delimiters-depth-9-face ((t (:foreground "#6b1d5a"))))
 '(vertical-border ((t (:background "#000000" :foreground "#000000"))))
 '(diff-added ((t (:background "#FFFFFF" :foreground "#009900"))))
 '(diff-removed ((t (:background "#FFFFFF" :foreground "#FF0000"))))
 '(diff-file-header ((t (:background "#BBBBDD" :foreground "#000000"))))
 '(diff-hunk-header ((t (:background "#DDDDFF" :foreground "#000000"))))
 '(clojure-keyword-face ((t (:foreground "#cb4fab")))))

(provide-theme 'tierack-light)
